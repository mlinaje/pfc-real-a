#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Custom ID"  name="custom-id" type="string">
Specifies a custom value for the "id" attribute of the generated
HTML field. This overrides any identifier that is usually generated.
Defaults to the filed property name in the form bean.
</wr:LayoutParameter>
<wr:LayoutParameter label="Input size" name="input-size" default="25" type="string">
Defines the size of inputs.
Allowed values are:
- size of the input
- 25 (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Input Max Length" name="input-max-length" type="string">
Defines the max length of inputs.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Javascript" name="use-javascripts" type="boolean" default="true">
Defines if calendar or Advanced HTML Editor have to be used.
 - true (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="FCKEditor toolbar" name="fck-toolbar" type="string" default="WebRatioDefault">
Defines the toolbar the FCKEditor should use.
Allowed values are:
- any toolbar defined in the fckconfig.js file
- WebRatioDefault (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Textarea width" name="width" default="35" type="string">
Defines the width of the textarea fields.
Allowed values are:
- numbers of columns
- 35 (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Textarea height" name="height" default="8" type="string">
Defines the height of the textarea fields.
Allowed values are:
- numbers of rows
- 8 (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Boolean field rendering" name="boolean-field-rendering" type="enum" values="normal|checkbox" default="normal">
Defines the rendering of a boolean field.
Allowed values are:
- normal (default)
- checkbox
</wr:LayoutParameter>
<wr:LayoutParameter label="Use 'No selection' in Selection fields" name="selection-field-empty-message" type="boolean" default="true">
Defines if the option "No selection" has to be used.
Allowed values are:
 - true (default)
 - false
</wr:LayoutParameter>
<wr:LayoutParameter label="Use 'No selection' in MultiSelection fields" name="multi-selection-field-empty-message" type="boolean" default="false">
Defines if the option "No selection" has to be used in MultiSelection fields.
Allowed values are:
 - true
 - false (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="No Selection Message" name="no-selection-message" type="string" default="selectionfield.noselection">
Defines the key of the message to use as the no selection item.
Default value: selectionfield.noselection
</wr:LayoutParameter>
<wr:LayoutParameter label="Selection fields rendering" name="selection-field-rendering" type="enum" values="select|radio|radio vertical" default="select">
Defines the rendering of a selection field.
Allowed values are:
- select (default)
- radio
- radio vertical
</wr:LayoutParameter>
<wr:LayoutParameter label="Multi selection fields rendering" name="multi-selection-field-rendering" type="enum" values="checkbox|multiple select" default="checkbox">
Defines the rendering of a multi selection field.
Allowed values are:
- checkbox (default)
- multiple select
</wr:LayoutParameter>
<wr:LayoutParameter label="Multiple Select Size" name="multiple-select-height" default="5" type="string">
Defines the size of a multiselection field rendered as multiple select.
By default the multiple select gets the size of the elements shown.
</wr:LayoutParameter>
<wr:LayoutParameter label="Show 'Select All' and 'Deselect All' links" name="select-all-links" type="boolean" default="false">
Defines if multiselection fields provide two links to select and deselect all options.
Allowed values are:
 - true
 - false (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Redisplay password" name="redisplay-password" type="boolean" default="false">
Defines if the password has to be redisplayed on page refresh.
</wr:LayoutParameter>
<wr:LayoutParameter label="Information text" name="information-text" type="string">
Informational text that is displayed below the field
</wr:LayoutParameter>
[%
import org.apache.commons.lang.math.NumberUtils
import org.apache.commons.lang.StringUtils

def type = field["type"]
def contentType = field["contentType"]
def fieldId = field["field"]
def modifiable = (field["modifiable"] == "true")
def plain = getById(field["field"])?.name == "Field"
def selection = getById(field["field"])?.name == "SelectionField"
def multiSelection = getById(field["field"])?.name == "MultiSelectionField"
def fieldProp = field["field"] + ((isLocalizedType(type) && plain) ? "_locale" : "")
def htmlId = StringUtils.defaultIfEmpty(params["custom-id"], fieldProp)
def width = NumberUtils.toInt(params["width"])
def height = NumberUtils.toInt(params["height"])
def inputSize = params["input-size"]
def maxLength = params["input-max-length"]
def useJavascripts = params["use-javascripts"]
def fckEditorToolbar = StringUtils.defaultIfEmpty(params["fck-toolbar"], "WebRatioDefault")
def subType = getById(field["subType"])
def typeId = (field["subType"] != "") ? field["subType"] : type
def formBean = page["id"] + "FormBean"
def submitLinks = getSubmitLinks(field) 
def readCond = getDisableCondition(field)
def readOnly = "false"
if(!selection && !multiSelection && !modifiable){
  readOnly = "true"
}else if(readCond != null){
  readOnly = "\${" + readCond + "}"  
}
def captcha = (field.selectSingleNode("ValidationRule[@predicate = 'captcha']") != null)
def onkeyPressed = {
   if(submitLinks != null && submitLinks.size() > 0){
      %]onkeypress="if(event.keyCode==13){clickButton('[%= submitLinks.collect{it["link"]}.join("|")%]'); return false;}"[%
   }
}

if (mode == "error") { %]
	[%if (null != params["information-text"] && params["information-text"] != "") { %]
	<tr>
		<td class="<wr:StyleClass context="field"/> info"><bean:message key="[%=params["information-text"]%]"/></td>
	</tr>
	[% } %]
	<span class="<wr:StyleClass context="field"/> error"><html:errors property="[%=fieldProp%]"/></span>
[% } else if (mode == "label") { %]
<span class="<wr:StyleClass context="field"/> header"><wr:Label context="field"/></span>
[% } else if (plain) {
	if (type == "boolean") {
		if (params["boolean-field-rendering"] == "checkbox") { %]
			<html:checkbox [%onkeyPressed()%] styleClass="[%=styleClass%]" property="[%=fieldProp%]" styleId="[%=htmlId%]" value="true" disabled="[%=readOnly%]"/>
		[% } else { %]
			[% if (modifiable) { %]
				<html:radio [%onkeyPressed()%] styleClass="[%=styleClass%]" property="[%=fieldProp%]" value="true" disabled="[%=readOnly%]"/>
				<bean:message key="[%=typeId%].yes"/>
				<html:radio [%onkeyPressed()%] styleClass="[%=styleClass%]" property="[%=fieldProp%]" value="false" disabled="[%=readOnly%]"/>
				<bean:message key="[%=typeId%].no"/>
			[% } else { %]
				<c:choose>
					<c:when test="${[%=formBean%].map.[%=fieldProp%]}">
						<bean:message key="[%=typeId%].yes"/>
					</c:when>
					<c:otherwise>
						<bean:message key="[%=typeId%].no"/>
					</c:otherwise>
				</c:choose>
			[% } %]
		[% } %]
		<c:if test="[%=readOnly%]">
			<html:hidden property="[%=fieldProp%]"/>
		</c:if>
	[% } else if (type == "text") { %]
		[% if (contentType == "text/html" && useJavascripts == "true") { %]
			<FCK:editor	instanceName="[%=fieldProp%]" width="[%= width * 10 %]"	height="[%= (height * 10) + 120 %]" basePath="/WRResources/FCKeditor/" toolbarSet="[%= fckEditorToolbar %]">
			  <jsp:attribute name="value"><c:out value="${[%=formBean%].map.[%= fieldProp %]}" escapeXml="false"/></jsp:attribute>
     		  <jsp:body><FCK:config BaseHref="<%= wrBaseURI%>"/></jsp:body>
     		</FCK:editor>
		[% } else { %]
			<html:textarea styleId="[%= htmlId %]" styleClass="[%=styleClass%]" cols="[%= width %]" rows="[%= height %]" property="[%=fieldProp%]" readonly="[%= readOnly%]"/>		
		[% } %]
	[% } else if (type == "blob") { %]
		<html:hidden property="[%=fieldProp%]_preload"/>
		[% if (modifiable) { %]
			<html:file [%onkeyPressed()%] styleId="[%= htmlId %]" styleClass="[%=styleClass%]" property="[%=fieldProp%]" disabled="[%= readOnly%]" size="[%= inputSize %]"/>
		[% } %]
		<c:if test="${not(empty [%=formBean%].map.[%=fieldProp%]_preload)}">
		  <html:checkbox [%onkeyPressed()%] styleClass="[%=styleClass%]" property="[%=fieldProp%]_clear" disabled="[%= readOnly%]"/> clear <a target="blank" href="<webratio:BLOB value="${[%=formBean%].map.[%=fieldProp%]_preload}"/>">preview</a>
		</c:if>
	[% } else if (type == "password") { %]
		<html:password [%onkeyPressed()%] styleId="[%= htmlId %]" size="[%= inputSize %]" styleClass="[%=styleClass%]" property="[%=fieldProp%]" readonly="[%= readOnly%]" redisplay="[%= params["redisplay-password"]%]"/>
	[% } else if (captcha) { %]
	    <table>	      
	      <tr>
	        <td style="border:1px solid black" align="center"><img src="<webratio:BLOB value="captcha.[%=field["id"]%].jpg?render=true"/>"/></td>
	      </tr>
	      <tr>  
	        <td><html:text [%onkeyPressed()%] [% if (maxLength != "") { %]maxlength="[%= maxLength %]"[% } %] size="[%= inputSize %]" styleId="[%= htmlId %]" styleClass="[%=styleClass%]" property="[%=fieldProp%]" readonly="[%= readOnly%]"/></td>
	      </tr>
	    </table>
	[% } else { %]
		<html:text [%onkeyPressed()%] [% if (maxLength != "") { %]maxlength="[%= maxLength %]"[% } %] size="[%= inputSize %]" styleId="[%= htmlId %]" styleClass="[%=styleClass%]" property="[%=fieldProp%]" readonly="[%= readOnly%]"/>
		[% if ((type == "date" || type == "time" || type == "timestamp") && useJavascripts == "true" && modifiable) { %]
			[% if (readCond != null) {%]<c:if test="${! [%= readCond %]}">[% } %]
				<img src="WRResources/calendar/calendar.gif" id="[%= htmlId %]_calendar" style="cursor: pointer"/>
				<script type="text/javascript">				
				  Calendar.setup(
				    {
				      inputField  : "[%= fieldProp %]",
				      ifFormat    : "<bean:message key="[%= typeId%]CalendarPattern"/>",
				      button      : "[%= fieldProp %]_calendar",
				      onClose     : forceFieldBlur[% if(type == "time" || type == "timestamp") { %],
				      showsTime : "true"
				      [% } %]
				    }
				  );
				</script>
			[% if (readCond != null) {%]</c:if>[% } %]
  		[% } %]
	[% } %]
[% } else if (selection) { 
		// selection field variables
		def labelProperty = field["field"] + "LabelList" + (isLocalizedType(type) ? "_locale" : "")
		def listProperty = field["field"] + "List"
		def selectionFieldRendition = params["selection-field-rendering"]
		def selectionFieldEmpty = params["selection-field-empty-message"]
        if(readCond != null){
           %]<c:if test="[%= readOnly%]"><html:hidden property="[%= fieldProp %]"/></c:if>[%        
        }
		if (type == "boolean") { %]
			<html:select [%onkeyPressed()%] styleId="[%= htmlId %]" styleClass="[%=styleClass%]" property="[%=fieldProp%]" disabled="[%= readOnly%]">
			  [% if (selectionFieldEmpty == "true") { %]
			  	<html:option value=""><bean:message key="[%=params["no-selection-message"]%]"/></html:option>
			  [% } %]
			  <html:option value="false"><bean:message key="[%=typeId%].no"/></html:option>
			  <html:option value="true"><bean:message key="[%=typeId%].yes"/></html:option>
			</html:select>
		[% } else { 
			if (selectionFieldRendition == "select") { %]
			<html:select [%onkeyPressed()%] styleId="[%= htmlId %]" styleClass="[%=styleClass%]" property="[%= fieldProp %]" disabled="[%= readOnly%]">
				[% if (selectionFieldEmpty == "true") { %]
			  		<html:option value=""><bean:message key="[%=params["no-selection-message"]%]"/></html:option>
			  	[% } %]
			  <html:options property="[%=listProperty%]" labelProperty="[%=labelProperty%]"/>
			</html:select>
			[% } else if (selectionFieldRendition == "radio vertical") { %]
			<table>
			<c:forEach var="current" varStatus="status" items="${[%= formBean + ".map." + listProperty %]}">
      			<c:set var="index" value="${status.index}"/>
      			<tr>
      			  <td class="[%= styleClass %]">
      			    <input type="radio" onclick="clickButton('[%= submitLinks.collect{it["link"]}.join("|")%]'); return false;" [%onkeyPressed()%] name="[%= fieldProp %]" value="<c:out value="${current}"/>" <c:if test="${current eq [%= formBean + ".map." + fieldProp %]}">checked="checked"</c:if> [% if(readCond != null){%]<c:if test="[%= readOnly%]">disabled</c:if>[%}%]>
      				      <img src="<c:out value="${[%= formBean + ".map." + labelProperty %][index]}"/>" border="0"/>
      			    </input>
      			  </td>
      			</tr>
      		</c:forEach>
      		</table>
			[% } else { %]
			<c:forEach var="current" varStatus="status" items="${[%= formBean + ".map." + listProperty %]}">
      			<c:set var="index" value="${status.index}"/>
      			<input type="radio" onclick="clickButton('[%= submitLinks.collect{it["link"]}.join("|")%]'); return false;" [%onkeyPressed()%] name="[%= fieldProp %]" value="<c:out value="${current}"/>" <c:if test="${current eq [%= formBean + ".map." + fieldProp %]}">checked="checked"</c:if> [% if(readCond != null){%]<c:if test="[%= readOnly%]">disabled</c:if>[%}%]>
      				<img src="<c:out value="${[%= formBean + ".map." + labelProperty %][index]}"/>" border="0"/>
      			</input>
      		</c:forEach>
			[% } %]
		[% } %]
[% } else if (multiSelection) { 
	// multi selection field variables
	def multiselectionFieldEmpty = params["multi-selection-field-empty-message"]	 
	if (params["multi-selection-field-rendering"] == "checkbox") { 
		def listProperty = formBean + ".map." + fieldProp + "List"
		def labelProperty = formBean + ".map." + fieldProp + "LabelList" + (isLocalizedType(type) ? "_locale" : "") 
		if (readCond != null) { %]
			<c:if test="[%= readOnly%]">
				<c:forEach var="preCheck" items="${[%=formBean%].map.[%= fieldProp%]}">
					<html:hidden property="[%= fieldProp %]" value="${preCheck}"/>
				</c:forEach>
			</c:if>
		[% } %]
		<table>
			<c:forEach var="current" varStatus="status" items="${[%=listProperty%]}">
				<tr>
					<td class="[%= styleClass %]">
						<html:multibox [%onkeyPressed()%] styleClass="[%= styleClass %]" property="[%=fieldProp%]" value="${current}" disabled="[%= readOnly%]"/>
						<c:out value="${[%=labelProperty%][status.index]}"/>
					</td>
				</tr>
			</c:forEach>
			[% if (params["select-all-links"] == "true") { %]
				<tr>
					<td>
						<a href="javascript:selectAll('[%= fieldProp %]', true)"><bean:message key="multiselectionfield.selectAll"/></a>
						<a href="javascript:selectAll('[%= fieldProp %]', false)"><bean:message key="multiselectionfield.deselectAll"/></a>
					</td>
				</tr>
			[% } %]
		</table>
	[% } else {
		def listProperty = fieldProp + "List"
		def labelProperty = fieldProp + "LabelList" + (isLocalizedType(type) ? "_locale" : "") 
		if (readCond != null) { %]
			<c:if test="[%= readOnly%]">
				<c:forEach var="preCheck" items="${[%=formBean%].map.[%= fieldProp%]}">
					<html:hidden property="[%= fieldProp %]" value="${preCheck}"/>
				</c:forEach>
			</c:if>
		[% } %]
		<html:select [%onkeyPressed()%] styleClass="[%= styleClass %]" styleId="[%= htmlId %]" property="[%= fieldId %]" multiple="yes" size="[%= params["multiple-select-height"] %]" disabled="[%= readOnly%]">
			[% if (multiselectionFieldEmpty == "true") { %]
				<html:option value=""><bean:message key="[%=params["no-selection-message"]%]"/></html:option>
			[% } %]
			<html:options property="[%=listProperty%]" labelProperty="[%=labelProperty%]" />
		</html:select>
		[% if (params["select-all-links"] == "true") { %]
			<br />
			<a href="javascript:selectAll('[%= fieldProp %]', true)"><bean:message key="multiselectionfield.selectAll"/></a>
			<a href="javascript:selectAll('[%= fieldProp %]', false)"><bean:message key="multiselectionfield.deselectAll"/></a>
			<br />
		[% } %]
	[% } %]
[% } %]
